{"version":3,"sources":["javascript.js","reportWebVitals.js","index.js"],"names":["document","oncontextmenu","api","iconImg","getElementById","loc","querySelector","tempC","pm_10","c_probability","window","addEventListener","long","lat","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","base","fine_dust","fetch","then","response","json","data","main","temp","place","feels_like","name","probability","clouds","all","weathericon","weather","console","log","src","href","localStorage","setItem","textContent","toFixed","list","aqi","Target","Target_apm","clock","time","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","AmPm","innerText","Search","this","keyword","engine","button","form","Engine","setInterval","prototype","e","preventDefault","value","open","month","getMonth","date","getDate","day","getDay","psn_day","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reportWebVitals"],"mappings":"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","file":"static/js/main.966959c2.chunk.js","sourcesContent":["document.oncontextmenu = function(){return false;} //마우스 우클릭금지\r\n\r\n// 날씨 api\r\nconst api = '4b45e3d69f4f446ddeb89a3517b17037'; //Replace with your API\r\n\r\nconst iconImg = document.getElementById('weather-icon');\r\nconst loc = document.querySelector('#location');\r\nconst tempC = document.querySelector('.c');\r\nconst pm_10 = document.querySelector('.pm10');\r\nconst c_probability = document.querySelector('.cprobability');\r\n\r\nwindow.addEventListener('load', () => {\r\n  let long;\r\n  let lat;\r\n  // Accesing Geolocation of User\r\n  if (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      // Storing Longitude and Latitude in variables\r\n      long = position.coords.longitude;\r\n      lat = position.coords.latitude;\r\n      const base = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${api}&units=metric`;\r\n      const fine_dust = `http://api.openweathermap.org/data/2.5/air_pollution?lat=${lat}&lon=${long}&appid=${api}&units=metric`;\r\n\r\n      // Using fetch to get data\r\n      fetch(base)\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          const { temp, feels_like } = data.main;\r\n          const place = data.name;\r\n          const probability = data.clouds.all;\r\n          const weathericon = data.weather[0].main;\r\n          console.log(weathericon);\r\n          \r\n          if (weathericon === `Clear`) {\r\n            const iconUrl = \"./image/sun.png\";\r\n            iconImg.src = iconUrl;\r\n            document.getElementById(\"Item\").src = \"./image/Bottle.png\";\r\n            document.getElementById(\"Item_link\").href = \"https://search.shopping.naver.com/search/all?query=%EB%AC%BC%EB%B3%91&cat_id=&frm=NVSHATC\";\r\n            localStorage.setItem('weather','Clear');\r\n          }\r\n          else if (weathericon === `Rain`) {\r\n            const iconUrl = \"./image/cloud_rain.png\";\r\n            document.getElementById(\"Item\").src = \"./image/Umbrella.png\";\r\n            document.getElementById(\"Item_link\").href = \"https://search.shopping.naver.com/search/all?query=%EC%9A%B0%EC%82%B0&cat_id=&frm=NVSHATC\";\r\n            iconImg.src = iconUrl;\r\n            localStorage.setItem('weather','Rain');\r\n          }\r\n          else if (weathericon === `Clouds`) {\r\n            const iconUrl = \"./image/cloud.png\";\r\n            document.getElementById(\"Item\").src = \"./image/Umbrella.png\";\r\n            document.getElementById(\"Item_link\").href = \"https://search.shopping.naver.com/search/all?query=%EC%9A%B0%EC%82%B0&cat_id=&frm=NVSHATC\";\r\n            iconImg.src = iconUrl;\r\n            localStorage.setItem('weather','Clouds');\r\n            \r\n          }\r\n          else if (weathericon === `Drizzle`) {\r\n            const iconUrl = \"./image/rain.png\";\r\n            document.getElementById(\"Item\").src = \"./image/Umbrella.png\";\r\n            document.getElementById(\"Item_link\").href = \"https://search.shopping.naver.com/search/all?query=%EC%9A%B0%EC%82%B0&cat_id=&frm=NVSHATC\";\r\n            iconImg.src = iconUrl;\r\n            localStorage.setItem('weather','Drizzle');\r\n          }\r\n          else if (weathericon === `Snow`) {\r\n            const iconUrl = \"./image/snow.png\";\r\n            document.getElementById(\"Item\").src = \"./image/Umbrella.png\";\r\n            document.getElementById(\"Item_link\").href = \"https://search.shopping.naver.com/search/all?query=%EC%9A%B0%EC%82%B0&cat_id=&frm=NVSHATC\";\r\n            iconImg.src = iconUrl;\r\n            localStorage.setItem('weather','Snow');\r\n          }\r\n          else {\r\n            const iconUrl = \"\"; // error\r\n            iconImg.src = iconUrl;\r\n            document.getElementById(\"Item\").src = \"./image/Bottle.png\";\r\n            document.getElementById(\"Item_link\").href = \"https://search.shopping.naver.com/search/all?query=%EB%AC%BC%EB%B3%91&cat_id=&frm=NVSHATC\";\r\n          }\r\n        \r\n          loc.textContent = `${place}`;\r\n        //   desc.textContent = `구름: ${description}`;\r\n          tempC.textContent = `현재 기온: ${temp.toFixed(2)} °C`;\r\n\r\n          c_probability.textContent = `${probability}%`;\r\n        });\r\n\r\n        fetch(fine_dust)\r\n        .then((response) => {\r\n            return response.json();\r\n          })\r\n          .then((data) => {\r\n            const temp = data.list[0].main.aqi;\r\n\r\n            if (temp === 1) {\r\n                pm_10.textContent = `좋음`;\r\n            }\r\n            else if (temp === 2) {\r\n                pm_10.textContent = `보통`;\r\n            }\r\n            else if (temp === 3) {\r\n                pm_10.textContent = `보통`;\r\n            }\r\n            else if (temp === 4) {\r\n                pm_10.textContent = `나쁨`;\r\n            }\r\n            else if (temp === 5) {\r\n                pm_10.textContent = `매우 나쁨`;\r\n            }\r\n            else {\r\n              pm_10.textContent = `Not_Found`; //error\r\n            }\r\n          });\r\n    });\r\n  }\r\n});\r\n\r\n\r\n// 실시간 시간 표시\r\nvar Target = document.getElementById(\"clock\");\r\nvar Target_apm = document.getElementById(\"apm\");\r\nfunction clock() {\r\n    var time = new Date();\r\n    var hours = time.getHours();\r\n    var minutes = time.getMinutes();\r\n    var seconds = time.getSeconds();\r\n    var AmPm =\"오전(AM)\";\r\n    if(hours > 12){   \r\n        AmPm =\"오후(PM)\";\r\n        hours %= 12;\r\n    }\r\n    Target.innerText = \r\n    `${hours < 10 ? `0${hours}` : hours}:${minutes < 10 ? `0${minutes}` : minutes}:${seconds < 10 ? `0${seconds}` : seconds}`;\r\n    Target_apm.innerText = `${AmPm}`;\r\n}\r\nclock();\r\nsetInterval(clock, 1000);\r\n\r\n// 검색 함수\r\nconst Searching = Search.prototype;\r\n\r\nfunction Search(){\r\n    this.keyword = document.querySelector('input[name = \"search\"]');\r\n    this.engine = document.querySelector('.SelectSearch');\r\n    this.button = document.querySelector('.img-button');\r\n    this.form = document.querySelector('.search');\r\n\r\n    this.Engine();\r\n}\r\nSearching.Engine = function(){ // 검색 엔진\r\n    this.form.addEventListener('submit', e => {\r\n    \r\n        e.preventDefault();\r\n        \r\n        let engine = this.engine.value;  \r\n        let keyword = this.keyword.value;\r\n\r\n        if(engine === 'google'){\r\n            window.open('https://www.google.co.kr/search?q=' + keyword); \r\n        }else if(engine === 'naver'){\r\n            window.open('https://search.naver.com/search.naver?query=' + keyword);\r\n        }\r\n    });\r\n}\r\nnew Search();\r\n\r\nfunction psn_day() {\r\n    var Target = document.getElementById(\"today\");\r\n    var time = new Date();\r\n\r\n            var month = time.getMonth();\r\n            var date = time.getDate();\r\n            var day = time.getDay();\r\n            var week = ['일', '월', '화', '수', '목', '금', '토'];\r\n\r\n            Target.innerText = `${month + 1}월 ${date}일 ${week[day]}요일 `;\r\n        \r\n}\r\npsn_day();\r\n\r\nfunction Page_Main(){\r\n  window.location.href = \"./index.html\";\r\n}\r\n\r\nfunction Page_Male() {\r\n  window.location.href = \"./male.html\";\r\n}\r\n\r\nfunction Page_Female() {\r\n  window.location.href = \"./female.html\";\r\n}\r\n\r\nfunction Page_Unisex() {\r\n  window.location.href = \"./uni.html\";\r\n}\r\n\r\nfunction Page_Food() {\r\n  window.location.href = \"./Food.html\";\r\n}\r\n\r\nvar num = 1;\r\n\r\nfunction Weather_Image(idx) {\r\n  console.log(num);\r\n  if (num === 1) {\r\n    document.getElementById(\"Item\").src = \"./image/Bottle.png\";\r\n    document.getElementById(\"Item_link\").href = \"https://search.shopping.naver.com/search/all?query=%EB%AC%BC%EB%B3%91&cat_id=&frm=NVSHATC\";\r\n  }\r\n  else {\r\n    document.getElementById(\"Item\").src = \"./image/Umbrella.png\";\r\n    document.getElementById(\"Item_link\").href = \"https://search.shopping.naver.com/search/all?query=%EC%9A%B0%EC%82%B0&cat_id=&frm=NVSHATC\";\r\n  }\r\n  if(num > 5) {\r\n    num = 1;\r\n  }\r\n  else {\r\n    var imgTag = document.getElementById(\"weather-icon\");\r\n    imgTag.setAttribute(\"src\",\"./image/weather/0\"+num+\".png\");\r\n    num++;\r\n  }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './maincss.css';\nimport './javascript.js';\nimport reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}